// Code generated by MockGen. DO NOT EDIT.
// Source: ./curl.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockICurl is a mock of ICurl interface.
type MockICurl struct {
	ctrl     *gomock.Controller
	recorder *MockICurlMockRecorder
}

// MockICurlMockRecorder is the mock recorder for MockICurl.
type MockICurlMockRecorder struct {
	mock *MockICurl
}

// NewMockICurl creates a new mock instance.
func NewMockICurl(ctrl *gomock.Controller) *MockICurl {
	mock := &MockICurl{ctrl: ctrl}
	mock.recorder = &MockICurlMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICurl) EXPECT() *MockICurlMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockICurl) Send() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Send indicates an expected call of Send.
func (mr *MockICurlMockRecorder) Send() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockICurl)(nil).Send))
}
